/**
 *
 * $Id$
 */
package adaptorinterface.validation;

import adaptorinterface.Resource;
import adaptorinterface.ResourcePropertyIsMemberProperty;
import adaptorinterface.ResourcePropertyOccurs;
import adaptorinterface.ResourcePropertyRepresentation;
import adaptorinterface.ResourcePropertyValueType;

import org.eclipse.emf.common.util.EList;

import vocabulary.Property;

/**
 * A sample validator interface for {@link adaptorinterface.ResourceProperty}.
 * This doesn't really do anything, and it's not a real EMF artifact.
 * It was generated by the org.eclipse.emf.examples.generator.validator plug-in to illustrate how EMF's code generator can be extended.
 * This can be disabled with -vmargs -Dorg.eclipse.emf.examples.generator.validator=false.
 */
public interface ResourcePropertyValidator {
	boolean validate();

	boolean validateTitle(String value);
	boolean validateName(String value);
	boolean validateOccurs(ResourcePropertyOccurs value);
	boolean validateReadOnly(boolean value);
	boolean validateValueType(ResourcePropertyValueType value);
	boolean validateRepresentation(ResourcePropertyRepresentation value);
	boolean validateRange(EList<Resource> value);
	boolean validateDescription(String value);
	boolean validateAllowedValue(EList<String> value);
	boolean validateIsMemberProperty(ResourcePropertyIsMemberProperty value);
	boolean validateReferences(Property value);
}
